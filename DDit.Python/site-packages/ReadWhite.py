# -*- coding: UTF-8 -*-
# @create by marick, 2018-07-04
# 识别白瓶
# 导入必要的软件包
import cv2
import os
import numpy as np

class ReadWhite(object):
    def __init__(self, parent):
        self.parent=parent;
        self.rtnRegions=[];
        self.min_area=600
        self.rtnAreas=[]
        self.percentage=0.90
    def start(self):
        print 'start'
        if self.parent.camera != None: print self.parent.camera
        if self.parent.srcFolderPath !=None: print self.parent.srcFolderPath
        if self.parent.backGround != None: print self.parent.backGround
        if self.parent.roi != None: print self.parent.roi
        if self.parent.white != None: print self.parent.white
    #识别白瓶
    #传入参数
    #toCheck，要检测图像
    #返回值
    #返回值，True表示检测到白瓶，False表示没有检测到白瓶(正常瓶)
    #算法简介
    #使用索贝尔算子计算二值化图像
    #对二值化处理图像，绘制直方图
    #计算直方图里黑色像素占黑色和白色像素点百分比
    #当百分比大于阈值判断为白瓶，否则判断为正常瓶
    def checkWhite(self,toCheck):
        rtn = False
        # 将要检测图像设置成灰度图像
        toCheck = cv2.cvtColor(toCheck, cv2.COLOR_BGR2GRAY)
        # 使用索贝尔算子计算二值化图像
        ddepth = cv2.CV_32F
        gradX = cv2.Sobel(toCheck, ddepth=ddepth, dx=1, dy=0, ksize=-1)
        gradY = cv2.Sobel(toCheck, ddepth=ddepth, dx=0, dy=1, ksize=-1)
        gradient = cv2.subtract(gradX, gradY)
        gradient = cv2.convertScaleAbs(gradient)
        thresh = cv2.threshold(gradient, 225, 255, cv2.THRESH_BINARY)[1]
        #对二值化处理图像，绘制直方图
        # 计算直方图里黑色像素占黑色和白色像素点百分比
        # 当百分比大于阈值判断为白瓶，否则判断为正常瓶
        histcv = cv2.calcHist([thresh],[0],None,[256],[0.0,256.0])
        percentage = histcv[0]/(histcv[0]+histcv[255])
        print percentage
        if(percentage>self.percentage): rtn = True
        return rtn

    def stop(self):
        print 'stop'
    def quit(self):
        print 'quit'

